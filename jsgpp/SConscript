# Copyright (C) 2008-today The SG++ project
# This file is part of the SG++ project. For conditions of distribution and
# use, please see the copyright notice provided with SG++ or at
# sgpp.sparsegrids.org

import fnmatch
import os

Import("*")

# as the dependency tracking for swig is buggy in scons,
# always trigger a "reswig" by removing the swig wrapper
if os.path.exists("jsgpp_wrap.cc"):
  os.remove("jsgpp_wrap.cc")

# clear jsgpp/java/*.java files
if os.path.isdir("java"):
  for filename in os.listdir("java"):
    if fnmatch.fnmatch(filename, "*.java"):
      os.remove(os.path.join("java", filename))
else:
  os.mkdir("java")

javaEnv = env.Clone()

# add C++ defines for all modules
for module in moduleNames:
  if javaEnv[module]:
    javaEnv["CPPDEFINES"][module] = "1"

# remove compiler warnings caused by swig
# (as we cannot do anything against them and as they confuse jenkins)
javaEnv.AppendUnique(CPPFLAGS=["-w"])

defines = ["-D" + c + "=" + javaEnv["CPPDEFINES"][c]
           for c in javaEnv["CPPDEFINES"]]
#swigIncludePaths = ["-I" + module + "/src/" for module in moduleFolders]
swigIncludePaths = []
javaEnv.AppendUnique(SWIGFLAGS=["-c++", "-java", "-package", "sgpp",
                                "-outdir", os.path.join(moduleName, "java")] +
                                swigIncludePaths + defines)

#javaEnv["STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME"]=1

javaEnv.AppendUnique(LIBPATH=BUILD_DIR)
javaEnv.AppendUnique(LIBS=flattenedDependencyGraph)

if env["USE_GSL"]:
  javaEnv.AppendUnique(LIBS=["gsl", "gslcblas"])

libJava = javaEnv.SharedLibrary(target="jsgpp", source=["jsgpp.i"])

installLibJava = javaEnv.Install(JSGPP_BUILD_PATH, libJava)
libraryTargetList.append(installLibJava)

# do javac compilation and jar packing in separate SCons process
# (see SConstruct_jsgpp_jar for more details)
jar = javaEnv.Command(target="jsgpp.jar",
                      source=installLibJava,
                      action="scons{} JSGPP_BUILD_PATH=\"{}\" -C \"{}\" -f \"{}\"".
                          format(".bat" if env["PLATFORM"] == "win32" else "",
                                 JSGPP_BUILD_PATH, moduleName, "SConstruct_jar"))
javaEnv.AlwaysBuild(jar)
libraryTargetList.append(jar)
