#############################################################################
# This file is part of jsgpp, a program package making use of spatially     #
# adaptive sparse grids to solve numerical problems                         #
#                                                                           #
# Copyright (C) 2008 Joerg Blank (blankj@in.tum.de)                         #
# Copyright (C) 2009 Alexander Heinecke (Alexander.Heinecke@mytum.de)       #
#                                                                           #
# jsgpp is free software; you can redistribute it and/or modify             #
# it under the terms of the GNU General Public License as published by      #
# the Free Software Foundation; either version 3 of the License, or         #
# (at your option) any later version.                                       #
#                                                                           #
# jsgpp is distributed in the hope that it will be useful,                  #
# but WITHOUT ANY WARRANTY; without even the implied warranty of            #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #
# GNU Lesser General Public License for more details.                       #
#                                                                           #
# You should have received a copy of the GNU General Public License         #
# along with jsgpp; if not, write to the Free Software                      #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA #
# or see <http://www.gnu.org/licenses/>.                                    #
#############################################################################

srcs = Split("""
jsgpp.i
""")

Import('env')
Import('src_objs')

j_env = env.Clone()

j_env.Append(SWIGFLAGS=['-c++','-java', '-package', 'weka.de.tum.in.www5.sgpp'])
j_env.Append(CPPPATH=['#/src/sgpp', env['JNI_CPPPATH'], env['JNI_CPPPATH'] + '/' + env['JNI_OS']])
j_env.Append(CPPFLAGS=['-fno-strict-aliasing'])

jsgpp = j_env.SharedLibrary(target="jsgpp", source = srcs + src_objs, SHLIBPREFIX = 'lib')

from glob import glob
files = glob('*.java')

Command('#/wekasgpp/weka/de/tum/in/www5/sgpp', files, Mkdir('wekasgpp/weka/de/tum/in/www5/sgpp'))

for f in files:
	Command('#/wekasgpp/weka/de/tum/in/www5/sgpp/' + f, f, Copy('$TARGET', 'tmp/build_jsgpp/' + f))	
	Command('#/lib/jsgpp/' + f, f, Copy('$TARGET', 'tmp/build_jsgpp/' + f))

Command('#/wekasgpp/libjsgpp.so', jsgpp, Copy('$TARGET', '$SOURCE'))

# copy the stuff to /lib/jsgpp
Command('#/lib/jsgpp/libjsgpp.so', jsgpp, Copy('$TARGET', '$SOURCE'))

Export('jsgpp')
