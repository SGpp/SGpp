#############################################################################
# This file is part of sgpp, a program package making use of spatially      #
# adaptive sparse grids to solve numerical problems                         #
#                                                                           #
# Copyright (C) 2010 Alexander Heinecke (Alexander.Heinecke@mytum.de)       #
#                                                                           #
# pysgpp is free software; you can redistribute it and/or modify            #
# it under the terms of the GNU Lesser General Public License as published  #
# by the Free Software Foundation; either version 3 of the License, or      #
# (at your option) any later version.                                       #
#                                                                           #
# pysgpp is distributed in the hope that it will be useful,                 #
# but WITHOUT ANY WARRANTY; without even the implied warranty of            #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #
# GNU Lesser General Public License for more details.                       #
#                                                                           #
# You should have received a copy of the GNU Lesser General Public License  #
# along with pysgpp; if not, write to the Free Software                     #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA #
# or see <http://www.gnu.org/licenses/>.                                    #
#############################################################################

SRCDIR = ./../../../src/sgpp/
OUTDIR = ./
BINDIR = ./../../../lib/sgpp/
OBJS = DataVector.o Grid.o LinearBoundaryGrid.o LinearTrapezoidBoundaryGrid.o LinearGrid.o ModLinearGrid.o\
	ModPolyGrid.o PolyGrid.o StandardGridGenerator.o BoundaryGridGenerator.o TrapezoidBoundaryGridGenerator.o\
	OperationBLinear.o OperationEvalLinear.o OperationHierarchisationLinear.o OperationBModLinear.o OperationEvalModLinear.o\
	OperationHierarchisationModLinear.o OperationBModPoly.o OperationEvalModPoly.o OperationHierarchisationModPoly.o\
	OperationBPoly.o OperationEvalPoly.o OperationHierarchisationPoly.o OperationHierarchisationLinearBoundary.o\
	OperationEvalLinearBoundary.o OperationBLinearBoundary.o BlackScholesTimestepMatrix.o BlackScholesSolver.o\
	ConjugateGradients.o SGppStopwatch.o BoundingBox.o OperationDeltaLinearBoundary.o OperationGammaLinearBoundary.o\
	OperationEvalBBLinearBoundary.o Euler.o CrankNicolson.o StdNormalDistribution.o BiCGStab.o DirichletUpdateVector.o\
	IOToolBonnSG.o OperationLTwoDotProductLinearBoundary.o OperationLTwoDotProductLinear.o GridPrinter.o\
	OperationLaplaceLinearBoundary.o ScreenOutput.o ModWaveletGrid.o OperationTestLinear.o OperationHierarchisationModWavelet.o\
	OperationTestModWavelet.o OperationBModWavelet.o OperationEvalModWavelet.o OperationTestModLinear.o\
	OperationTestModPoly.o OperationTestPoly.o OperationTestLinearBoundary.o HeatEquationSolver.o\
	HeatEquationTimestepMatrix.o OperationTestModBspline.o OperationEvalModBspline.o OperationBModBspline.o\
	OperationHierarchisationModBspline.o ModBsplineGrid.o DMSystemMatrix.o ARFFTools.o OperationLaplaceLinear.o\
	OperationLaplaceModLinear.o OperationUpDownTestLinearBoundary.o StdUpDown.o UpDownOneOpDim.o UpDownTwoOpDims.o

default : $(OBJS)
	mkdir -p $(BINDIR)
	rm -f $(BINDIR)$(LIBNAME)
	ar rc $(BINDIR)$(LIBNAME) $(OBJS)
	ranlib $(BINDIR)$(LIBNAME)

DataVector.o : $(SRCDIR)data/DataVector.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)DataVector.o $(SRCDIR)data/DataVector.cpp

Grid.o : $(SRCDIR)grid/Grid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)Grid.o $(SRCDIR)grid/Grid.cpp

LinearBoundaryGrid.o : $(SRCDIR)grid/type/LinearBoundaryGrid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)LinearBoundaryGrid.o $(SRCDIR)grid/type/LinearBoundaryGrid.cpp

LinearTrapezoidBoundaryGrid.o : $(SRCDIR)grid/type/LinearTrapezoidBoundaryGrid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)LinearTrapezoidBoundaryGrid.o $(SRCDIR)grid/type/LinearTrapezoidBoundaryGrid.cpp
	
LinearGrid.o : $(SRCDIR)grid/type/LinearGrid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)LinearGrid.o $(SRCDIR)grid/type/LinearGrid.cpp
	
ModLinearGrid.o : $(SRCDIR)grid/type/ModLinearGrid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)ModLinearGrid.o $(SRCDIR)grid/type/ModLinearGrid.cpp
	
ModWaveletGrid.o : $(SRCDIR)grid/type/ModWaveletGrid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)ModWaveletGrid.o $(SRCDIR)grid/type/ModWaveletGrid.cpp
	
ModBsplineGrid.o : $(SRCDIR)grid/type/ModBsplineGrid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)ModBsplineGrid.o $(SRCDIR)grid/type/ModBsplineGrid.cpp

ModPolyGrid.o : $(SRCDIR)grid/type/ModPolyGrid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)ModPolyGrid.o $(SRCDIR)grid/type/ModPolyGrid.cpp

PolyGrid.o : $(SRCDIR)grid/type/PolyGrid.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)PolyGrid.o $(SRCDIR)grid/type/PolyGrid.cpp
	
StandardGridGenerator.o : $(SRCDIR)grid/generation/StandardGridGenerator.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)StandardGridGenerator.o $(SRCDIR)grid/generation/StandardGridGenerator.cpp
	
BoundaryGridGenerator.o : $(SRCDIR)grid/generation/BoundaryGridGenerator.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)BoundaryGridGenerator.o $(SRCDIR)grid/generation/BoundaryGridGenerator.cpp

TrapezoidBoundaryGridGenerator.o : $(SRCDIR)grid/generation/TrapezoidBoundaryGridGenerator.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)TrapezoidBoundaryGridGenerator.o $(SRCDIR)grid/generation/TrapezoidBoundaryGridGenerator.cpp

OperationTestModWavelet.o : $(SRCDIR)basis/modwavelet/operation/datadriven/OperationTestModWavelet.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationTestModWavelet.o $(SRCDIR)basis/modwavelet/operation/datadriven/OperationTestModWavelet.cpp

OperationEvalModWavelet.o : $(SRCDIR)basis/modwavelet/operation/common/OperationEvalModWavelet.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationEvalModWavelet.o $(SRCDIR)basis/modwavelet/operation/common/OperationEvalModWavelet.cpp

OperationBModWavelet.o : $(SRCDIR)basis/modwavelet/operation/datadriven/OperationBModWavelet.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationBModWavelet.o $(SRCDIR)basis/modwavelet/operation/datadriven/OperationBModWavelet.cpp

OperationHierarchisationModWavelet.o : $(SRCDIR)basis/modwavelet/operation/common/OperationHierarchisationModWavelet.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationHierarchisationModWavelet.o $(SRCDIR)basis/modwavelet/operation/common/OperationHierarchisationModWavelet.cpp

OperationTestModBspline.o : $(SRCDIR)basis/modbspline/operation/datadriven/OperationTestModBspline.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationTestModBspline.o $(SRCDIR)basis/modbspline/operation/datadriven/OperationTestModBspline.cpp

OperationEvalModBspline.o : $(SRCDIR)basis/modbspline/operation/common/OperationEvalModBspline.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationEvalModBspline.o $(SRCDIR)basis/modbspline/operation/common/OperationEvalModBspline.cpp

OperationBModBspline.o : $(SRCDIR)basis/modbspline/operation/datadriven/OperationBModBspline.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationBModBspline.o $(SRCDIR)basis/modbspline/operation/datadriven/OperationBModBspline.cpp

OperationHierarchisationModBspline.o : $(SRCDIR)basis/modbspline/operation/common/OperationHierarchisationModBspline.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationHierarchisationModBspline.o $(SRCDIR)basis/modbspline/operation/common/OperationHierarchisationModBspline.cpp

OperationBLinear.o : $(SRCDIR)basis/linear/noboundary/operation/datadriven/OperationBLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationBLinear.o $(SRCDIR)basis/linear/noboundary/operation/datadriven/OperationBLinear.cpp

OperationTestLinear.o : $(SRCDIR)basis/linear/noboundary/operation/datadriven/OperationTestLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationTestLinear.o $(SRCDIR)basis/linear/noboundary/operation/datadriven/OperationTestLinear.cpp

OperationEvalLinear.o : $(SRCDIR)basis/linear/noboundary/operation/common/OperationEvalLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationEvalLinear.o $(SRCDIR)basis/linear/noboundary/operation/common/OperationEvalLinear.cpp

OperationHierarchisationLinear.o : $(SRCDIR)basis/linear/noboundary/operation/common/OperationHierarchisationLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationHierarchisationLinear.o $(SRCDIR)basis/linear/noboundary/operation/common/OperationHierarchisationLinear.cpp
	
OperationLTwoDotProductLinear.o : $(SRCDIR)basis/linear/noboundary/operation/pde/OperationLTwoDotProductLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationLTwoDotProductLinear.o $(SRCDIR)basis/linear/noboundary/operation/pde/OperationLTwoDotProductLinear.cpp

OperationLaplaceLinear.o : $(SRCDIR)basis/linear/noboundary/operation/pde/OperationLaplaceLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationLaplaceLinear.o $(SRCDIR)basis/linear/noboundary/operation/pde/OperationLaplaceLinear.cpp

OperationLaplaceModLinear.o : $(SRCDIR)basis/linear/modlinear/operation/pde/OperationLaplaceModLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationLaplaceModLinear.o $(SRCDIR)basis/linear/modlinear/operation/pde/OperationLaplaceModLinear.cpp

OperationBModLinear.o : $(SRCDIR)basis/linear/modlinear/operation/datadriven/OperationBModLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationBModLinear.o $(SRCDIR)basis/linear/modlinear/operation/datadriven/OperationBModLinear.cpp

OperationTestModLinear.o : $(SRCDIR)basis/linear/modlinear/operation/datadriven/OperationTestModLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationTestModLinear.o $(SRCDIR)basis/linear/modlinear/operation/datadriven/OperationTestModLinear.cpp

OperationEvalModLinear.o : $(SRCDIR)basis/linear/modlinear/operation/common/OperationEvalModLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationEvalModLinear.o $(SRCDIR)basis/linear/modlinear/operation/common/OperationEvalModLinear.cpp

OperationHierarchisationModLinear.o : $(SRCDIR)basis/linear/modlinear/operation/common/OperationHierarchisationModLinear.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationHierarchisationModLinear.o $(SRCDIR)basis/linear/modlinear/operation/common/OperationHierarchisationModLinear.cpp

OperationBModPoly.o : $(SRCDIR)basis/modpoly/operation/datadriven/OperationBModPoly.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationBModPoly.o $(SRCDIR)basis/modpoly/operation/datadriven/OperationBModPoly.cpp

OperationTestModPoly.o : $(SRCDIR)basis/modpoly/operation/datadriven/OperationTestModPoly.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationTestModPoly.o $(SRCDIR)basis/modpoly/operation/datadriven/OperationTestModPoly.cpp

OperationEvalModPoly.o : $(SRCDIR)basis/modpoly/operation/common/OperationEvalModPoly.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationEvalModPoly.o $(SRCDIR)basis/modpoly/operation/common/OperationEvalModPoly.cpp

OperationHierarchisationModPoly.o : $(SRCDIR)basis/modpoly/operation/common/OperationHierarchisationModPoly.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationHierarchisationModPoly.o $(SRCDIR)basis/modpoly/operation/common/OperationHierarchisationModPoly.cpp

OperationBPoly.o : $(SRCDIR)basis/poly/operation/datadriven/OperationBPoly.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationBPoly.o $(SRCDIR)basis/poly/operation/datadriven/OperationBPoly.cpp

OperationTestPoly.o : $(SRCDIR)basis/poly/operation/datadriven/OperationTestPoly.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationTestPoly.o $(SRCDIR)basis/poly/operation/datadriven/OperationTestPoly.cpp

OperationEvalPoly.o : $(SRCDIR)basis/poly/operation/common/OperationEvalPoly.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationEvalPoly.o $(SRCDIR)basis/poly/operation/common/OperationEvalPoly.cpp

OperationHierarchisationPoly.o : $(SRCDIR)basis/poly/operation/common/OperationHierarchisationPoly.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationHierarchisationPoly.o $(SRCDIR)basis/poly/operation/common/OperationHierarchisationPoly.cpp

OperationHierarchisationLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/common/OperationHierarchisationLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationHierarchisationLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/common/OperationHierarchisationLinearBoundary.cpp

OperationEvalLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/common/OperationEvalLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationEvalLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/common/OperationEvalLinearBoundary.cpp
	
OperationEvalBBLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/common/OperationEvalBBLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationEvalBBLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/common/OperationEvalBBLinearBoundary.cpp

OperationUpDownTestLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/common/OperationUpDownTestLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationUpDownTestLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/common/OperationUpDownTestLinearBoundary.cpp

OperationBLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/datadriven/OperationBLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationBLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/datadriven/OperationBLinearBoundary.cpp

OperationTestLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/datadriven/OperationTestLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationTestLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/datadriven/OperationTestLinearBoundary.cpp
	
OperationDeltaLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/pde/finance/OperationDeltaLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationDeltaLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/pde/finance/OperationDeltaLinearBoundary.cpp
	
OperationGammaLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/pde/finance/OperationGammaLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationGammaLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/pde/finance/OperationGammaLinearBoundary.cpp
		
OperationLTwoDotProductLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/pde/OperationLTwoDotProductLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationLTwoDotProductLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/pde/OperationLTwoDotProductLinearBoundary.cpp
	
OperationLaplaceLinearBoundary.o : $(SRCDIR)basis/linear/boundary/operation/pde/OperationLaplaceLinearBoundary.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)OperationLaplaceLinearBoundary.o $(SRCDIR)basis/linear/boundary/operation/pde/OperationLaplaceLinearBoundary.cpp
	
BlackScholesTimestepMatrix.o : $(SRCDIR)algorithm/pde/BlackScholesTimestepMatrix.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)BlackScholesTimestepMatrix.o $(SRCDIR)algorithm/pde/BlackScholesTimestepMatrix.cpp

HeatEquationTimestepMatrix.o : $(SRCDIR)algorithm/pde/HeatEquationTimestepMatrix.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)HeatEquationTimestepMatrix.o $(SRCDIR)algorithm/pde/HeatEquationTimestepMatrix.cpp
	
DMSystemMatrix.o : $(SRCDIR)algorithm/datadriven/DMSystemMatrix.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)DMSystemMatrix.o $(SRCDIR)algorithm/datadriven/DMSystemMatrix.cpp
	
ConjugateGradients.o : $(SRCDIR)solver/sle/ConjugateGradients.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)ConjugateGradients.o $(SRCDIR)solver/sle/ConjugateGradients.cpp

BiCGStab.o : $(SRCDIR)solver/sle/BiCGStab.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)BiCGStab.o $(SRCDIR)solver/sle/BiCGStab.cpp

Euler.o : $(SRCDIR)solver/ode/Euler.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)Euler.o $(SRCDIR)solver/ode/Euler.cpp
	
CrankNicolson.o : $(SRCDIR)solver/ode/CrankNicolson.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)CrankNicolson.o $(SRCDIR)solver/ode/CrankNicolson.cpp

BlackScholesSolver.o : $(SRCDIR)application/pde/BlackScholesSolver.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)BlackScholesSolver.o $(SRCDIR)application/pde/BlackScholesSolver.cpp

HeatEquationSolver.o : $(SRCDIR)application/pde/HeatEquationSolver.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)HeatEquationSolver.o $(SRCDIR)application/pde/HeatEquationSolver.cpp
	
BoundingBox.o : $(SRCDIR)grid/common/BoundingBox.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)BoundingBox.o $(SRCDIR)grid/common/BoundingBox.cpp
	
IOToolBonnSG.o : $(SRCDIR)tools/finance/IOToolBonnSG.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)IOToolBonnSG.o $(SRCDIR)tools/finance/IOToolBonnSG.cpp

GridPrinter.o : $(SRCDIR)tools/common/GridPrinter.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)GridPrinter.o $(SRCDIR)tools/common/GridPrinter.cpp
	
DirichletUpdateVector.o : $(SRCDIR)grid/common/DirichletUpdateVector.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)DirichletUpdateVector.o $(SRCDIR)grid/common/DirichletUpdateVector.cpp	
	
StdNormalDistribution.o : $(SRCDIR)tools/common/StdNormalDistribution.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)StdNormalDistribution.o $(SRCDIR)tools/common/StdNormalDistribution.cpp
	
ScreenOutput.o : $(SRCDIR)application/common/ScreenOutput.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)ScreenOutput.o $(SRCDIR)application/common/ScreenOutput.cpp
	
SGppStopwatch.o : $(SRCDIR)tools/common/SGppStopwatch.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)SGppStopwatch.o $(SRCDIR)tools/common/SGppStopwatch.cpp
	
ARFFTools.o : $(SRCDIR)tools/datadriven/ARFFTools.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)ARFFTools.o $(SRCDIR)tools/datadriven/ARFFTools.cpp
	
StdUpDown.o : $(SRCDIR)algorithm/pde/StdUpDown.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)StdUpDown.o $(SRCDIR)algorithm/pde/StdUpDown.cpp
	
UpDownOneOpDim.o : $(SRCDIR)algorithm/pde/UpDownOneOpDim.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)UpDownOneOpDim.o $(SRCDIR)algorithm/pde/UpDownOneOpDim.cpp

UpDownTwoOpDims.o : $(SRCDIR)algorithm/pde/UpDownTwoOpDims.cpp
	$(CC) $(CFLAGS) -o $(OUTDIR)UpDownTwoOpDims.o $(SRCDIR)algorithm/pde/UpDownTwoOpDims.cpp
	
clean:
	rm *
