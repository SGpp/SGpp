#############################################################################
# This file is part of sgpp, a program package making use of spatially      #
# adaptive sparse grids to solve numerical problems                         #
#                                                                           #
# Copyright (C) 2008 Joerg Blank (blankj@in.tum.de)                         #
# Copyright (C) 2009 Alexander Heinecke (Alexander.Heinecke@mytum.de)       #
#                                                                           #
# sgpp is free software; you can redistribute it and/or modify              #
# it under the terms of the GNU General Public License as published by      #
# the Free Software Foundation; either version 3 of the License, or         #
# (at your option) any later version.                                       #
#                                                                           #
# sgpp is distributed in the hope that it will be useful,                   #
# but WITHOUT ANY WARRANTY; without even the implied warranty of            #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #
# GNU General Public License for more details.                              #
#                                                                           #
# You should have received a copy of the GNU General Public License         #
# along with sgpp; if not, write to the Free Software                       #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA #
# or see <http://www.gnu.org/licenses/>.                                    #
#############################################################################


Import("env")

srcs = Split("""
data/DataVector.cpp
GridFactory.cpp
GridFactoryImpl.cpp

grid/generation/StandardGridGenerator.cpp

LinearOperations.cpp
ModLinearOperations.cpp
PolyOperations.cpp
ModPolyOperations.cpp
OperationHierarchisationLinear.cpp
""")



sg_env = env.Clone()

sg_env.Append(CPPPATH=['#/src/sgpp'])

src_objs = sg_env.SharedObject(srcs)
Export('src_objs')
