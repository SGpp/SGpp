# Copyright (C) 2009 Technische Universitaet Muenchen
# This file is part of the SG++ project. For conditions of distribution and
# use, please see the copyright notice at http://www5.in.tum.de/SGpp

# author Dirk Pflueger (Dirk.Pflueger@in.tum.de)

import os
import fnmatch

Import('env')
Import('BUILD_DIR')
Import('moduleName')

dependencies = ["base", "solver"]

# if src are empty, the build script tried to traverse tmp/sg_$modulename/

srcs = []
for currentFolder, subdirNames, fileNames in os.walk("."):
    #print "folder: ", currentFolder
    #print "subdirNames: ", subdirNames
    #print "fileNames: ", fileNames
    if currentFolder.startswith("test"):
        continue
    for fileName in fnmatch.filter(fileNames, '*.cpp'):
        srcs.append(os.path.join(currentFolder, fileName))

objs = []
for sourceFile in srcs:
    objs.append(env.SharedObject(sourceFile))

 
lib = env.SharedLibrary(target ="sgpp" + moduleName, source = objs)
env.Install(BUILD_DIR, lib)
# # static libraries get the suffix "static" which allos scons to correctly resolve the dependencies 
# # of the shared libaries on the static libraries on windows
libStatic = env.StaticLibrary(target ="sgpp" + moduleName + "static", source = objs, SHLIBPREFIX = 'lib')
env.Install(BUILD_DIR, libStatic)

Export('srcs')
Export('objs')
Export('dependencies')
