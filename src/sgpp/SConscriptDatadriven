# Copyright (C) 2009 Technische Universitaet Muenchen
# This file is part of the SG++ project. For conditions of distribution and
# use, please see the copyright notice at http://www5.in.tum.de/SGpp

# author Dirk Pflueger (Dirk.Pflueger@in.tum.de)

Import("env")

srcs = Split("""
datadriven/algorithm/DMSystemMatrixBaseSP.cpp
datadriven/algorithm/DMSystemMatrixBase.cpp
datadriven/algorithm/DMSystemMatrix.cpp
datadriven/algorithm/DensitySystemMatrix.cpp
datadriven/algorithm/DMWeightMatrix.cpp
datadriven/algorithm/AlgorithmAdaBoostIdentity.cpp
datadriven/algorithm/AlgorithmAdaBoostBase.cpp
datadriven/application/LearnerBaseSP.cpp
datadriven/application/LearnerBase.cpp
datadriven/application/Learner.cpp
datadriven/application/LearnerDensityBased.cpp
datadriven/application/LearnerDensityBasedReg.cpp
datadriven/basis/linear/boundary/operation/OperationTestLinearBoundary.cpp
datadriven/basis/linear/noboundary/operation/OperationTestLinear.cpp
datadriven/basis/linear/noboundary/operation/OperationDensityMarginalizeLinear.cpp
datadriven/basis/linear/noboundary/operation/OperationDensityMargTo1DLinear.cpp
datadriven/basis/linear/noboundary/operation/OperationDensitySampling1DLinear.cpp
datadriven/basis/linear/noboundary/operation/OperationDensitySamplingLinear.cpp
datadriven/basis/linear/noboundary/operation/OperationDensityRejectionSamplingLinear.cpp
datadriven/basis/linear/noboundary/operation/OperationDensityConditionalLinear.cpp
datadriven/basis/modbspline/operation/OperationTestModBspline.cpp
datadriven/basis/modlinear/operation/OperationTestModLinear.cpp
datadriven/basis/modpoly/operation/OperationTestModPoly.cpp
datadriven/basis/modwavelet/operation/OperationTestModWavelet.cpp
datadriven/basis/poly/operation/OperationTestPoly.cpp
datadriven/basis/prewavelet/operation/OperationTestPrewavelet.cpp
datadriven/basis/linearstretched/boundary/operation/OperationTestLinearStretchedBoundary.cpp
datadriven/basis/linearstretched/noboundary/operation/OperationTestLinearStretched.cpp

datadriven/operation/OperationRegularizationDiagonal.cpp
datadriven/basis/linear/boundary/operation/OperationRegularizationDiagonalLinearBoundary.cpp

datadriven/operation/DatadrivenOpFactory.cpp

datadriven/tools/ARFFTools.cpp
""")



sg_env = env.Clone()

sg_env.Append(CPPPATH=['#/src/sgpp'])

src_objs_datadriven = sg_env.SharedObject(srcs)
Export('src_objs_datadriven')

libsgppdatadriven = sg_env.SharedLibrary(target="sgppdatadriven", source = src_objs_datadriven, SHLIBPREFIX = 'lib')
libsgppdatadrivenstatic = sg_env.StaticLibrary(target="sgppdatadriven", source = src_objs_datadriven, SHLIBPREFIX = 'lib')

Export('libsgppdatadriven')
Export('libsgppdatadrivenstatic')
