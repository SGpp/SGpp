~~~
To generate the Debian package, the following steps need to be performed:

  1. Update the create_deb.sh script to fit your needs:

    a. Update the build process by setting the needed flags for the scons call
  
    b. Update the dependency lists for the two packages (sgpp and pysgpp), 
       according to the scons flags set above

  2. Run the script directly from this folder:

      ./create_deb.sh
      
      
Please note that create_deb.sh can take one optional argument. 
If given, it will build a test package without asking the user for version numbers and author
This is used for automated testing. Manually, you should stick to calling the script without any parameters

~~~
To install the packages, copy the Debian packages to a folder on the target system, 
and run the following commands in that folder:

      sudo apt install ./libsgpp_<ver>.deb
      sudo apt install ./libsgpp-python_<ver>.deb
      sudo apt install ./libsgpp-java<ver>.deb

Root rights are needed, and the user will be prompted to allow for installing the
needed dependencies.

~~~
The minimal package requirements for the machine running the Debian package build, 
besides the manually added dependencies specified in the run script, are:

      gcc, python3-dev, python3-numpy, swig, scons, python3-jinja2, fakeroot, javahelper
~~~

Note about java: In order for the java package to work, the user (or his IDE) needs to set the classpath to the standard ubuntu folder:

export CLASSPATH=/usr/share/java/jsgpp.jar:$(pwd):$CLASSPATH
