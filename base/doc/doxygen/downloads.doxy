/**
@page downloads Downloads and Version History

If you use any part of the software or any resource of this webpage and/or
documentation, you implicitly accept the copyright (see the \ref copyright).
If you publish any results obtained based on or with any help of SG++ or
its documentation, you have to cite a corresponding publication listed at
http://sgpp.sparsegrids.org.



<!-- ############################################################# -->
@section downloads__history Versions

@subsection downloads_history_300 Version 3.0.0, 2018/03/12
It took us some time, but we now can offer a new major release with a lot of changes and plenty of new functionality!

Download
  - Source: <a href="https://github.com/SGpp/SGpp">Fork us on GitHub</a>
  - We now provide binaries!
    - deb package for Linux (C++): <a href="http://sgpp.sparsegrids.org/downloads/">libsgpp_3.0.0</a>
    - deb package for Linux (Python support, requires C++ package): <a href="http://sgpp.sparsegrids.org/downloads/">libsgpp_3.0.0</a>
    - for Matlab/Windows: <a href="http://sgpp.sparsegrids.org/downloads/sgpp_3.0.0_matlab-windows.tar.gz">sgpp_3.0.0_matlab-windows.tar.gz</a>
    - for Matlab/Linux: <a href="http://sgpp.sparsegrids.org/downloads/sgpp_3.0.0_matlab-linux.tar.gz">sgpp_3.0.0_matlab-linux.tar.gz</a>

Important changes:
- We provide a new combigrid module with plenty of functionality!
  - an anistropic implementation of the Combination Technique. This means that different 1D-grids and 1D  - operators can be used for each dimension. This allows e.g. interpolating in one direction and integrating the interpolated function in another direction.
  - @ref example_point_distributions_py "1D Grids" : Uniform (with or without boundary), Clenshaw-Curtis, Chebyshev, (weighted) Leja, (weighted) \f$L^{2}-Leja\f$
  - Operators: Interpolation (Polynomials, B-Splines, Hat-functions), quadrature (Polynomials, B-Splines, Hat-functions), tensors (Polynomials)
  - regular and adaptive (also parallel) level-generation: various level managers are available that predict the surplus of each subspace
  - support for directly working on full-grid subspaces: enables to solve PDEs, regression problems, density estimation on each full-grid separately
  - simple C++ and python interfaces to get started quickly
  - serialization and deserialization of computed function values
  - optimizations: function evaluations (but not the following computations) can be easily parallelized, interpolation at multiple points at once, operator coefficients and grid points are stored for recomputations at other evaluation points
  - frequent use of abstract base classes such that extensions are easy to implement (e.g. new grids, operators and adaption schemes)
  - various surrogate models for Uncertainty Quantification that are based on the Combination Technique are available:
    - @ref example_bspline_pce_cpp "B-Spline Collocation"
    - @ref example_sc_cpp "Stochastic Collocation" (global polynomial approximation with Legendre polynomials)
    - @ref example_pce_cpp "Polynomial Chaos Expansion" (global polynomial approximation with orthogonal polynomials with respect to univariate weight functions)
- A new plug-in-based data mining pipeline, including
  - data input wrapper and support for CVS data files, sgpp::datadriven::CSVTools
  - a regression-based fitter sgpp::datadriven::FitterConfiguration
  - a scorer wrapper for evaluation sgpp::datadriven::Scorer
  - new classification methods, such as a density-based learner with online-offline splitting sgpp::datadriven::LearnerSGDEOnOff, including incomplete Cholesky factorization sgpp::datadriven::DBMatDMSDenseIChol
  - new adaptive refinement schemes, including joint refinement for multiple classes sgpp::base::MultipleClassRefinement
- Support for ordered data sets
  - pre-ordering of data sets on space-filling curves in Morton order to support data locality, sgpp::datadriven::MortonOrder
- New grid spacings
  - general grid stretching sgpp::base::Stretching
  - reactivation of bounding boxes sgpp::base::BoundingBox
- Plenty of fixes and updates
  - improved modularization: it is now easy to add own modules
  - restructured examples, and a lot more of them
- ... and much more!

@subsection downloads_history_210 Version 2.1.0, 2016/08/12
- Download:
  <a href="http://sgpp.sparsegrids.org/downloads/sgpp_2.1.0.tar.gz">
  sgpp_2.1.0.tar.gz</a>

Important changes:
- We are modifying the preliminary combigrid module; therefore it is not included in this release
- Introduced C++11 features
  - smart pointers
- Completely restructured documentation of examples
- A lot more examples
- Improved build system
- Better unser instructions for build system
- More tests
- Clone method for Grids
- New learner functionality

@subsection downloads_history_200 Version 2.0.0, 2016/05/20
- Download:
  <a href="http://sgpp.sparsegrids.org/downloads/sgpp_2.0.0.tar.gz">
  sgpp_2.0.0.tar.gz</a>

As we have retructured (and significantly improved) several of the interfaces,
we switched to a new, major version. As we don't provide backwards compatibility,
we list here the most important changes:

- Massive interface change in `sgpp::base` from plain pointers to smart pointers and references
  (e.g., sgpp::base::Grid::createLinearGrid(), sgpp::base::Grid::getGenerator(), …)
- Consistent renaming of key functions in `Grid`, `GridStorage`, and `GridIndex`
  (e.g., sgpp::base::Grid::getDimension())
- Name change of global namespace from `SGPP` to `sgpp`
- Major redesign of SCons scripts, change of SCons parameters, better diagnostic output
- Add support for Clang 3.8
- Overall improvement of the code quality due to fixed Clang warnings
- Removal of single precision support and of double
- Removal of MSVC++ support
- More unit tests
- Small changes and bug fixes in code and documentation

@subsection downloads_history_110 Version 1.1.0, 2016/02/24
- Download:
  <a href="http://sgpp.sparsegrids.org/downloads/sgpp_1.1.0.tar.gz">
  sgpp_1.1.0.tar.gz</a>

New features:
- Improved code quality
- New combigrid package
- OpenCL data mining
- Improved Scons support
- Support for installation (scons install)
- More unit tests
- New optimization method (CMA-ES)
- Some refactoring in sgpp::optimization (may break compatibility)
- Test problems for sgpp::optimization restructured.

@subsection downloads_history_100 Version 1.0.0
- Download:
  <a href="http://sgpp.sparsegrids.org/downloads/release_1.0.0.tgz">
  release_1.0.0.tgz</a>

Finally, it's out there!

Please note that release version 1.0.0 contains a major restructuring.
Interfaces have been redesigned, factory methods restructured,
and a lot of improvements have been done.

Important changes that might cause side-effects in codes using
previous versions include:
- There are entirely new parameters for compilation.
  Please see <tt>scons -h</tt> for further information.
- Some of the Grid classes have been renamed.
  This affects especially the boundary-based grids.
  LinearBoundaryGrid is now the grid with the same
  discretization on the boundary as on the main axis.

Features of Release Version 1.0.0:
- Automatic check for requirements in SCons for compilation
- Full module support
- Release of further and extended modules
  (optimization, pde, solver, datadriven, …)
- Extended parallelization support
- New types of basis functions
- More documentation, especially on adaptive refinement
- And much more…

@subsection downloads_history_092 Version 0.9.2
- Download: <a href="http://sgpp.sparsegrids.org/downloads/release_0.9.2.tgz">
  release_0.9.2.tgz</a>

- Minor fixes
- Changes in basic API

@subsection downloads_history_091 Version 0.9.1
- Download: <a href="http://sgpp.sparsegrids.org/downloads/release_0.9.1.tgz">
  release_0.9.1.tgz</a>

- Compilation support for auto detection of settings.
- Extended use of DataVector from Python.
- GridDataBase class.

@subsection downloads_history_090 Version 0.9.0
- Download: <a href="http://sgpp.sparsegrids.org/downloads/release_0.9.0.tgz">
  release_0.9.0.tgz</a>

- Provides everything that is necessary to use spatially adaptive
  sparse grids for interpolation, optimization, …
- Several types of piecewise linear basis functions
  - Different boundary treatment
  - Modified boundary basis functions
- Grids (handling, creation, modification, …)
- Adaptivity
- Hash-based grid storage
*/
