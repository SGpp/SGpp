/**
@mainpage SG++ Documentation
Welcome to the Sparse Grid ++ (SG++ or SGpp) documentation.

@version (Stable Beta) Revision 0.9.0 -- Beta, as still some
interfaces could change in the very near future towards version 1.0

@image html teaser.gif "Images taken from [1]"

<div align="center">
  <table width="600">
    <tr>
      <td>
        If you use any part of the software or any resource of this webpage and/or documentation, you implicitly accept the copyright (see section \ref copyright).
      </td>
     </tr>
  </table>
</div>


SG++ is a toolbox allowing to employ spatially adaptive sparse grids
straightforward, flexibly, and without the vast initial overhead that
has to be spent when implementing sparse grids and the corresponding
algorithms. To be able to deal with different kinds
of problems in a spatially adaptive way - ranging from interpolation
and quadrature via the solution of differential equations to
regression, classification, and more - a main motivation behind the
development and all considerations was to create a toolbox which can
be used in a very flexible and modular way by different users in
different applications.

The main features of the sparse grid toolbox are efficiency and
flexibility, both of which can sometimes be nasty rivals, for example
if the reusability of an algorithm for different purposes requires
extra data structures or control mechanisms, thus slowing down special
algorithmic variants. To ensure performance at run-time, we use C++
for all performance critical parts. Considering flexibility, we have
spent a great deal in ensuring modularity, reusability and the
separation of data structures and algorithms. Furthermore, we provide
the means to use the SG++ toolbox from within Python, Matlab, Java,
and C++, of course.

To name a few special features:
- Different types of basis functions are supported which enable to
cope with the characteristics of special applications.
- Modern shared-memory multi-core systems are supported via OpenMP to
speed-up computations.
- Adaptive refinement criteria can easily specified as functor
objects.
- The underlying data structure (which is, per default, hash-based)
is encapsulated so that it can be exchanged by other choices.
- Template-based support for fast realizations of typical sparse-grid
algorithms that make use of the tensor product structure of the
underlying basis.

SG++ is open source software and delivered as source code. For
questions, contributions, and requests, please <a
href="mailto:Dirk.Pflueger@in.tum.de">contact us</a>.



<!-- ############################################################# -->
@section mainpage__overview Overview

- @subpage development
- @subpage manual

The documentation of the SG++ toolbox is structured in two main
parts. The first one, @ref development, addresses all those who
want to contribute to SG++ or who are involved in its
development. There, the styleguide can be found, references to useful
tools and utilities are provided, and a few issues that did arise at
the initial development at the Chair of Scientific Computing at the TU
Munich are gathered.

The second one, @ref manual, is dedicated to users of
SG++. For example, installation instructions are provided as well
as short use cases as a quick-start to using SG++.


<!-- ############################################################# -->
@section mainpage__history Version History

@subsection mainpage_history_100 Version 1.0.0

What will be there for Release Version 1.0 (scheduled later this year)
- Automatic check for requirements in SCons for compilation</li>
- Release of further modules bejond the base package (module sgppbase)</li>
- Extended parallelization support
- New types of basis functions
- More documentation, especially on adaptive refinement
- And much more...

@subsection mainpage_history_092 Version 0.9.2
- minor fixes
- changes in basic API

@subsection mainpage_history_091 Version 0.9.1
- Compilation support for auto detection of settings.
- Extended use of DataVector from Python.
- GridDataBase class.

@subsection mainpage_history_090 Version 0.9.0
- Provides everything that is necessary to use spatially adaptive
sparse grids for interpolation, optimization, ...
- Several types of piecewise linear basis functions
  - Different boundary treatment
  - Modified boundary basis functions
- Grids (handling, creation, modification, ...)
- Adaptivity
- Hash-based grid storage

<!-- ############################################################# -->
@section mainpage__literature Literature

The following publications address SG++:

- D. Pfl&uuml;ger, Spatially Adaptive Sparse Grids for Higher-Dimensional Problems. Dissertation, Verlag Dr. Hut, M&uuml;nchen, 2010. ISBN 9-783-868-53555-6.
- ...

<!-- ############################################################# -->
@section mainpage__references References

[1] D. Pfl&uuml;ger, Spatially Adaptive Sparse Grids for Higher-Dimensional Problems. Dissertation, Verlag Dr. Hut, M&uuml;nchen, 2010. ISBN 9-783-868-53555-6.

*/
