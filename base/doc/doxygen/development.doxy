/**
@page development Developer How-Tos

<div width=60% align=center style="color:#FF0000;">All code has to be documented in such a way that functions,
classes and all other entities appearing in this documentation are easily understandable
for @e all other developers.</div>



<!-- ############################################################# -->
@section development__overview Overview
- @ref development__unittests (this page)
- @ref development__doxygen (this page)
- @subpage styleguide


<!-- ############################################################# -->
@section development__unittests Testing

We have both Python unit tests and unit test based on @c BOOST. They can be found
in the test subdirectory of each module. The @c BOOST unit tests are preferrably
to be used. However, there is some extra functionality in Python which
can be tested only in Python, of course.

If you modify existing code, do not forget
to make sure that no new errors are introduced. If you write new
functionalities, do @em always add unit tests for each functionality!


<!-- ############################################################# -->
@section development__doxygen Doxygen

The documentation has to be Doxygen compatible. Doxygen
tags must be used in the Java-style way, i.e. starting with \@.

During development tags like \@todo should be used wherever applicable. They
are then listed on the @link todo ToDo@endlink-page.

Different source files can be grouped together in so-called modules. The
link to the page listing all modules can be found in the navigation
bar of the documentation.

Please correct any warnings or errors that appear when creating the
documentation with doxygen!

@sa Doxygen Manual http://www.stack.nl/~dimitri/doxygen/manual.html
@sa Documenting the code http://www.stack.nl/~dimitri/doxygen/docblocks.html
@sa Special Commands http://www.stack.nl/~dimitri/doxygen/commands.html


<!-- ============================================================= -->
@subsection development__doxygen__howto How to run, use and customize

Executing <tt>doxygen</tt> in the main folder creates the
Doxygen-documentation in the subfolder <tt>doc</tt>. The settings
for Doxygen are automatically taken from the file
<tt>Doxyfile</tt>. It is automatically created based on @c Doxyfile.template
each time @c scons is exectued.

*/
