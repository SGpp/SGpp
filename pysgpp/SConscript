# Copyright (C) 2008-today The SG++ Project
# This file is part of the SG++ project. For conditions of distribution and
# use, please see the copyright notice provided with SG++ or at 
# sgpp.sparsegrids.org

import os

# as the dependency tracking for swig is buggy in scons, always trigger a "reswig" by removing the swig wrapper
if os.path.exists("pysgpp_wrap.cc"):
    os.remove("pysgpp_wrap.cc")

srcs = Split("""
pysgpp.i
""")

Import('env')
Import('BUILD_DIR')
Import('PYSGPP_BUILD_DIR')
Import('moduleFolders')

py_env = env.Clone()

# remove compiler warnings caused by swig (as we cannot do anything against them, 
# and as they confuse jenkins):
py_env.AppendUnique(CPPFLAGS=['-w'])
if env['PLATFORM']=='cygwin':
    py_env.Append(LIBS=['python2.7'])    
elif env['PLATFORM']=='darwin':
    py_env['SHLIBSUFFIX'] = '.so'
    
py_env['STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME']=1

swigIncludePaths = ['-I' + module + '/src/' for module in moduleFolders]
#swigIncludePaths += ['']

py_env.AppendUnique(SWIGFLAGS=['-c++','-python'] + swigIncludePaths + ['-D'+c for c in py_env['CPPDEFINES']], CPPPATH=['#/src/sgpp'])
#py_env['STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME']=1
# The explicit ".so" suffix is required for OSX as otherwise ".dylib" is used in OSX. Python however requires ".so" on OSX as well. On all other plattforms ".so" actually is the default.
pysgpp = py_env.SharedLibrary(target="pysgpp", source = srcs, SHLIBPREFIX = '_', LIBPATH = BUILD_DIR, LIBS=['sgppbase', 'sgppdatadriven', 'sgppsolver', 'sgpppde', 'sgppmisc', 'sgppfinance', 'sgppcombigrid', 'sgppparallel', 'sgppquadrature']) # 
pysgppInstall = py_env.Install(PYSGPP_BUILD_DIR, pysgpp)
py_env.Install(PYSGPP_BUILD_DIR, "pysgpp.py")


# run minimal test after compilation
builder = Builder(action = "python $SOURCE")
env.Append(BUILDERS = {'SimpleTest' : builder})
pysgppSimpleImportTest = env.SimpleTest('importTest.py')
env.Requires(pysgppSimpleImportTest, pysgppInstall)
env.AlwaysBuild(pysgppSimpleImportTest) 

Export('pysgppInstall')
Export('pysgppSimpleImportTest')
