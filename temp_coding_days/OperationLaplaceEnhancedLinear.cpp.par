// Copyright (C) 2008-today The SG++ Project
// This file is part of the SG++ project. For conditions of distribution and
// use, please see the copyright notice provided with SG++ or at 
// sgpp.sparsegrids.org

#include "pde/basis/linear/noboundary/operation/OperationLaplaceEnhancedLinear.hpp"

#include "misc/pde/basis/linear/noboundary/algorithm_sweep/LaplaceEnhancedDownBBLinear.hpp"
#include "misc/pde/basis/linear/noboundary/algorithm_sweep/LaplaceEnhancedUpBBLinear.hpp"

#include "base/algorithm/sweep.hpp"

namespace sg
{
namespace pde
{

OperationLaplaceEnhancedLinear::OperationLaplaceEnhancedLinear(sg::base::GridStorage* storage) : UpDownOneOpDimEnhanced(storage)
{
}

OperationLaplaceEnhancedLinear::OperationLaplaceEnhancedLinear(sg::base::GridStorage* storage, sg::base::DataVector& coef) : UpDownOneOpDimEnhanced(storage, coef)
{
}

OperationLaplaceEnhancedLinear::~OperationLaplaceEnhancedLinear()
{
}

void OperationLaplaceEnhancedLinear::up(sg::base::DataMatrix& alpha, sg::base::DataMatrix& result, size_t dim, size_t start_grad_dim, size_t num_grad_dims)
{
	LaplaceEnhancedUpBBLinear func(this->storage, start_grad_dim, num_grad_dims);
	sg::base::sweep<LaplaceEnhancedUpBBLinear> s(func, this->storage);

	s.sweep1D(alpha, result, dim);
}

void OperationLaplaceEnhancedLinear::down(sg::base::DataMatrix& alpha, sg::base::DataMatrix& result, size_t dim, size_t start_grad_dim, size_t num_grad_dims)
{
	LaplaceEnhancedDownBBLinear func(this->storage, start_grad_dim, num_grad_dims);
	sg::base::sweep<LaplaceEnhancedDownBBLinear> s(func, this->storage);

	s.sweep1D(alpha, result, dim);
}

}
}
