# Copyright (C) 2008-today The SG++ Project
# This file is part of the SG++ project. For conditions of distribution and
# use, please see the copyright notice provided with SG++ or at
# sgpp.sparsegrids.org

import ModuleHelper

def checkForLibrary(name, flag, headers, libraries):
  if type(headers) is str: headers = [headers]
  if type(libraries) is str: libraries = [libraries]
  if libraries is None: libraries = []
  
  if (flag in config.env) and config.env[flag]:
    if config.CheckHeader(headers, language="C++") and \
        config.CheckLib(libraries, language="C++"):
      additionalDependencies.extend(libraries)
      env["CPPDEFINES"][flag] = "1"
      print "sgpp::optimization will be compiled with {}.".format(name)
    else:
      print "sgpp::optimization will be compiled " + \
            "without {} (library not found).".format(name)
  else:
    print "sgpp::optimization will be compiled " + \
          "without {} (flag not set).".format(name)

Import("*")

moduleDependencies = ["sgppbase"]
additionalDependencies = []

checkForLibrary("UMFPACK",   "USE_UMFPACK",   "suitesparse/umfpack.h", "umfpack")
checkForLibrary("Eigen",     "USE_EIGEN",     "eigen3/Eigen/Dense",    None)
checkForLibrary("Armadillo", "USE_ARMADILLO", "armadillo",             "armadillo")
checkForLibrary("Gmm++",     "USE_GMMPP",     "gmm/gmm.h",             None)

module = ModuleHelper.Module(moduleDependencies, additionalDependencies)

module.scanSource()
module.buildLibrary()
module.generatePythonDocstrings()
if env["ARCH"] != "mic":
  module.buildExamples()
module.buildBoostTests()
module.runBoostTests()
module.runCpplint()
