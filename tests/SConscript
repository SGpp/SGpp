# This file is part of sg++, a program package making use of spatially 
# adaptive sparse grids to solve numerical problems.
#
# Copyright (C) 2007-2009  Dirk Pflueger (pflueged@in.tum.de)
# Copyright (C) 2007  Joerg Blank (blankj@in.tum.de)
# 
# pysgpp is free software; you can redistribute it and/or modify            #
# it under the terms of the GNU Lesser General Public License as published  #
# by the Free Software Foundation; either version 3 of the License, or      #
# (at your option) any later version.                                       #
#                                                                           #
# pysgpp is distributed in the hope that it will be useful,                 #
# but WITHOUT ANY WARRANTY; without even the implied warranty of            #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #
# GNU Lesser General Public License for more details.                       #
#                                                                           #
# You should have received a copy of the GNU Lesser General Public License  #
# along with pysgpp; if not, write to the Free Software                     #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA #
# or see <http://www.gnu.org/licenses/>.                                    #
#############################################################################

Import('env')

cpy = Command("#tests/_pysgpp.so", "#/tmp/build_pysgpp/_pysgpp.so", Copy("$TARGET", "$SOURCE"))
cpy += Command("#tests/pysgpp.py", "#/tmp/build_pysgpp/pysgpp.py", Copy("$TARGET", "$SOURCE"))
cpy += Command("#tests/tools.py", "#/bin/tools.py", Copy("$TARGET", "$SOURCE"))

bld = Builder(action = "python $SOURCE")
env = Environment(BUILDERS = {'Test' : bld})

tests = env.Test('test_pysgpp.py')
Requires(tests, cpy)
AlwaysBuild(tests)

data_tests = env.Test('tbin/tdata/testsuite.py')
Requires(data_tests, cpy)
AlwaysBuild(data_tests)

learner_test = env.Test('tbin/tlearner/testsuite.py')
Requires(learner_test, cpy)
AlwaysBuild(learner_test)

env.Alias('test', tests)

