# Copyright (C) 2008-today The SG++ project
# This file is part of the SG++ project. For conditions of distribution and
# use, please see the copyright notice provided with SG++ or at
# sgpp.sparsegrids.org

import Helper
import ModuleHelper
import Helper
import os

Import("*")

moduleDependencies = ["sgpppde", "sgppsolver", "sgppbase"]

additionalDependencies = []
additionalBoostTestDependencies = []
        
if env["USE_ZLIB"]:
  additionalDependencies += ["z"]
if env["USE_OCL"]:
  additionalDependencies += ["OpenCL"]
if env["USE_GSL"]:
    additionalDependencies += ["gsl"]
    
    if env["USE_GSL_MKL"]:
        
        if not os.environ['MKLROOT']:
            print('Can not find MKLROOT environment variable. Are MKL scripts sourced?')
            exit(1)
        
        
        env.Append(CCFLAGS = '-fopenmp' if env['COMPILER'] == 'gnu' else '-qopenmp')
        env.Append(CCFLAGS = '-m64'if env['COMPILER'] == 'gnu' else None)
        env.Append(CCFLAGS = '-I{}/include'.format(os.environ['MKLROOT']))
        
        env.Append(LINKFLAGS ='-Wl,--no-as-needed')
        env.Append(LINKFLAGS ='-L{}/lib/intel64'.format(os.environ['MKLROOT']))
        additionalDependencies +=['mkl_intel_lp64', 'mkl_core', 'pthread', 'm', 'dl']
        additionalDependencies.append('mkl_gnu_thread' if env['COMPILER'] == 'gnu' else 'mkl_intel_thread')
    else:
        additionalDependencies += ["gslcblas"]

additionalBoostTestDependencies = ["z"]
performanceTestFlag = "COMPILE_BOOST_PERFORMANCE_TESTS"
performanceTestRunFlag = "RUN_BOOST_PERFORMANCE_TESTS"

if env[performanceTestFlag]:
  additionalBoostTestDependencies.extend(["boost_filesystem", "boost_system"])

module = ModuleHelper.Module(moduleDependencies, additionalDependencies,
                             additionalBoostTestDependencies)

module.scanSource()
module.buildLibrary()
module.generatePythonDocstrings()

if env["ARCH"] == "mic":
  module.buildExamples("examplesMIC")
else:
  module.buildExamples()
if env["USE_OCL"]:
  module.buildExamples("examplesOCL",
      additionalExampleDependencies=["boost_program_options",
                                     "boost_filesystem",
                                     "boost_system"])

module.runPythonTests()
module.buildBoostTests()
module.runBoostTests()
module.buildBoostTests("performanceTests", compileFlag=performanceTestFlag)
module.runBoostTests("performanceTests", compileFlag=performanceTestFlag,
                     runFlag=performanceTestRunFlag)
module.runCpplint()
