# Copyright (C) 2008-today The SG++ project
# This file is part of the SG++ project. For conditions of distribution and
# use, please see the copyright notice provided with SG++ or at 
# sgpp.sparsegrids.org

import os
import fnmatch

Import('env')
Import('BUILD_DIR')
Import('moduleName')

dependencies = ["base", "solver"]

avxFolders = ['./src/sgpp/datadriven/operation/OperationMultipleEvalSubspace/', './src/sgpp/datadriven/operation/OperationMultiEvalStreaming']

avx_env = env.Clone()
avxCPPFLAGS = filter(lambda flag: flag != '-msse3', avx_env['CPPFLAGS'])
avx_env['CPPFLAGS'] = avxCPPFLAGS
#avx_env.Remove(CPPFLAGS = '-msse3')
avx_env.Append(CPPFLAGS = '-mavx')

def isAVXFolder(folder):
    for avxFolder in avxFolders:
        if folder.startswith(avxFolder):
            return True
    return False

objs = []
for currentFolder, subdirNames, fileNames in os.walk("."):
    if currentFolder.startswith("./src"):
        for fileName in fnmatch.filter(fileNames, '*.cpp'):
            sourceFile = os.path.join(currentFolder, fileName)
            if isAVXFolder(currentFolder):
                objs.append(avx_env.SharedObject(sourceFile))
            else:
                objs.append(env.SharedObject(sourceFile))                
 
lib = env.SharedLibrary(target ="sgpp" + moduleName, source = objs, LIBPATH = [BUILD_DIR, '#/lib/alglib'], LIBS=['sgppbase', 'sgppsolver', 'libalglib'])    
env.Depends(lib, "#/" + BUILD_DIR.path + "/libsgppbase.so")
env.Depends(lib, "#/" + BUILD_DIR.path + "/libsgppsolver.so")
env.Depends(lib, "#/lib/alglib" + "/libalglib.so")
libInstall = env.Install(BUILD_DIR, lib)
# # static libraries get the suffix "static" which allos scons to correctly resolve the dependencies 
# # of the shared libaries on the static libraries on windows
libStatic = env.StaticLibrary(target ="sgpp" + moduleName + "static", source = objs, SHLIBPREFIX = 'lib')
env.Install(BUILD_DIR, libStatic)

Import('libraryTargetList')
Import('installTargetList')
libraryTargetList.append(lib)
installTargetList.append(libInstall)
