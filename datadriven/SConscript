# Copyright (C) 2008-today The SG++ project
# This file is part of the SG++ project. For conditions of distribution and
# use, please see the copyright notice provided with SG++ or at
# sgpp.sparsegrids.org

import ModuleHelper
import Helper

Import("*")

moduleDependencies = ["sgpppde", "sgppsolver", "sgppbase"]

additionalDependencies = []
additionalBoostTestDependencies = []


#zlib needed for datamining
if(config.env["USE_ZLIB"]):
    if not config.CheckHeader("zlib.h", language="C++"):
        Helper.printErrorAndExit("The flag USE_ZLIB was given, but the necessary header 'zlib.h' was not found.")
    else:
        additionalDependencies = ["z"]
        additionalBoostTestDependencies = ["z"]
        env["CPPDEFINES"]["ZLIB"] = "1"
        
if env["USE_OCL"]:
    additionalDependencies += ["OpenCL"]

additionalBoostTestDependencies = []
performanceTestFlag = "COMPILE_BOOST_PERFORMANCE_TESTS"
performanceTestRunFlag = "RUN_BOOST_PERFORMANCE_TESTS"

if env[performanceTestFlag]:
  additionalBoostTestDependencies.extend(["boost_filesystem", "boost_system"])

module = ModuleHelper.Module(moduleDependencies, additionalDependencies,
                             additionalBoostTestDependencies)

module.scanSource()
module.buildLibrary()
module.generatePythonDocstrings()

if env["ARCH"] == "mic":
  module.buildExamples("examplesMIC")
else:
  module.buildExamples()
if env["USE_OCL"]:
  module.buildExamples("examplesOCL",
      additionalExampleDependencies=["boost_program_options",
                                     "boost_filesystem",
                                     "boost_system"])

module.runPythonTests()
module.buildBoostTests()
module.runBoostTests()
module.buildBoostTests("performanceTests", compileFlag=performanceTestFlag)
module.runBoostTests("performanceTests", compileFlag=performanceTestFlag,
                     runFlag=performanceTestRunFlag)
module.runCpplint()
