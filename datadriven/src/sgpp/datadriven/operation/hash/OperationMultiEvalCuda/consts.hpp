// Copyright (C) 2008-today The SG++ project
// This file is part of the SG++ project. For conditions of distribution and
// use, please see the copyright notice provided with SG++ or at
// sgpp.sparsegrids.org

#ifndef __CONSTS_HPP
#define __CONSTS_HPP

///@cond DOXY_IGNORE // NOLINT()
namespace sgpp {
namespace datadriven {
namespace OpMultiEvalCudaDetail {

/// Precomputed _b[l][d] = binom(d+l-2,l-1)
const uint32_t _b[51][18] = {
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  // NOLINT()
    0x00000000, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001,
    0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001,
    0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001, 0x00000001,  // NOLINT()
    0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005,
    0x00000006, 0x00000007, 0x00000008, 0x00000009, 0x0000000a, 0x0000000b,
    0x0000000c, 0x0000000d, 0x0000000e, 0x0000000f, 0x00000010, 0x00000011,  // NOLINT()
    0x00000000, 0x00000001, 0x00000003, 0x00000006, 0x0000000a, 0x0000000f,
    0x00000015, 0x0000001c, 0x00000024, 0x0000002d, 0x00000037, 0x00000042,
    0x0000004e, 0x0000005b, 0x00000069, 0x00000078, 0x00000088, 0x00000099,  // NOLINT()
    0x00000000, 0x00000001, 0x00000004, 0x0000000a, 0x00000014, 0x00000023,
    0x00000038, 0x00000054, 0x00000078, 0x000000a5, 0x000000dc, 0x0000011e,
    0x0000016c, 0x000001c7, 0x00000230, 0x000002a8, 0x00000330, 0x000003c9,  // NOLINT()
    0x00000000, 0x00000001, 0x00000005, 0x0000000f, 0x00000023, 0x00000046,
    0x0000007e, 0x000000d2, 0x0000014a, 0x000001ef, 0x000002cb, 0x000003e9,
    0x00000555, 0x0000071c, 0x0000094c, 0x00000bf4, 0x00000f24, 0x000012ed,  // NOLINT()
    0x00000000, 0x00000001, 0x00000006, 0x00000015, 0x00000038, 0x0000007e,
    0x000000fc, 0x000001ce, 0x00000318, 0x00000507, 0x000007d2, 0x00000bbb,
    0x00001110, 0x0000182c, 0x00002178, 0x00002d6c, 0x00003c90, 0x00004f7d,  // NOLINT()
    0x00000000, 0x00000001, 0x00000007, 0x0000001c, 0x00000054, 0x000000d2,
    0x000001ce, 0x0000039c, 0x000006b4, 0x00000bbb, 0x0000138d, 0x00001f48,
    0x00003058, 0x00004884, 0x000069fc, 0x00009768, 0x0000d3f8, 0x00012375,  // NOLINT()
    0x00000000, 0x00000001, 0x00000008, 0x00000024, 0x00000078, 0x0000014a,
    0x00000318, 0x000006b4, 0x00000d68, 0x00001923, 0x00002cb0, 0x00004bf8,
    0x00007c50, 0x0000c4d4, 0x00012ed0, 0x0001c638, 0x00029a30, 0x0003bda5,  // NOLINT()
    0x00000000, 0x00000001, 0x00000009, 0x0000002d, 0x000000a5, 0x000001ef,
    0x00000507, 0x00000bbb, 0x00001923, 0x00003246, 0x00005ef6, 0x0000aaee,
    0x0001273e, 0x0001ec12, 0x00031ae2, 0x0004e11a, 0x00077b4a, 0x000b38ef,  // NOLINT()
    0x00000000, 0x00000001, 0x0000000a, 0x00000037, 0x000000dc, 0x000002cb,
    0x000007d2, 0x0000138d, 0x00002cb0, 0x00005ef6, 0x0000bdec, 0x000168da,
    0x00029018, 0x00047c2a, 0x0007970c, 0x000c7826, 0x0013f370, 0x001f2c5f,  // NOLINT()
    0x00000000, 0x00000001, 0x0000000b, 0x00000042, 0x0000011e, 0x000003e9,
    0x00000bbb, 0x00001f48, 0x00004bf8, 0x0000aaee, 0x000168da, 0x0002d1b4,
    0x000561cc, 0x0009ddf6, 0x00117502, 0x001ded28, 0x0031e098, 0x00510cf7,  // NOLINT()
    0x00000000, 0x00000001, 0x0000000c, 0x0000004e, 0x0000016c, 0x00000555,
    0x00001110, 0x00003058, 0x00007c50, 0x0001273e, 0x00029018, 0x000561cc,
    0x000ac398, 0x0014a18e, 0x00261690, 0x004403b8, 0x0075e450, 0x00c6f147,  // NOLINT()
    0x00000000, 0x00000001, 0x0000000d, 0x0000005b, 0x000001c7, 0x0000071c,
    0x0000182c, 0x00004884, 0x0000c4d4, 0x0001ec12, 0x00047c2a, 0x0009ddf6,
    0x0014a18e, 0x0029431c, 0x004f59ac, 0x00935d64, 0x010941b4, 0x01d032fb,  // NOLINT()
    0x00000000, 0x00000001, 0x0000000e, 0x00000069, 0x00000230, 0x0000094c,
    0x00002178, 0x000069fc, 0x00012ed0, 0x00031ae2, 0x0007970c, 0x00117502,
    0x00261690, 0x004f59ac, 0x009eb358, 0x013210bc, 0x023b5270, 0x040b856b,  // NOLINT()
    0x00000000, 0x00000001, 0x0000000f, 0x00000078, 0x000002a8, 0x00000bf4,
    0x00002d6c, 0x00009768, 0x0001c638, 0x0004e11a, 0x000c7826, 0x001ded28,
    0x004403b8, 0x00935d64, 0x013210bc, 0x02642178, 0x049f73e8, 0x08aaf953,  // NOLINT()
    0x00000000, 0x00000001, 0x00000010, 0x00000088, 0x00000330, 0x00000f24,
    0x00003c90, 0x0000d3f8, 0x00029a30, 0x00077b4a, 0x0013f370, 0x0031e098,
    0x0075e450, 0x010941b4, 0x023b5270, 0x049f73e8, 0x093ee7d0, 0x11e9e123,  // NOLINT()
    0x00000000, 0x00000001, 0x00000011, 0x00000099, 0x000003c9, 0x000012ed,
    0x00004f7d, 0x00012375, 0x0003bda5, 0x000b38ef, 0x001f2c5f, 0x00510cf7,
    0x00c6f147, 0x01d032fb, 0x040b856b, 0x08aaf953, 0x11e9e123, 0x23d3c246,  // NOLINT()
    0x00000000, 0x00000001, 0x00000012, 0x000000ab, 0x00000474, 0x00001761,
    0x000066de, 0x00018a53, 0x000547f8, 0x001080e7, 0x002fad46, 0x0080ba3d,
    0x0147ab84, 0x0317de7f, 0x072363ea, 0x0fce5d3d, 0x21b83e60, 0x458c00a6,  // NOLINT()
    0x00000000, 0x00000001, 0x00000013, 0x000000be, 0x00000532, 0x00001c93,
    0x00008371, 0x00020dc4, 0x000755bc, 0x0017d6a3, 0x004783e9, 0x00c83e26,
    0x020fe9aa, 0x0527c829, 0x0c4b2c13, 0x1c198950, 0x3dd1c7b0, 0x835dc856,  // NOLINT()
    0x00000000, 0x00000001, 0x00000014, 0x000000d2, 0x00000604, 0x00002297,
    0x0000a608, 0x0002b3cc, 0x000a0988, 0x0021e02b, 0x00696414, 0x0131a23a,
    0x03418be4, 0x0869540d, 0x14b48020, 0x30ce0970, 0x6e9fd120, 0xf1fd9976,  // NOLINT()
    0x00000000, 0x00000001, 0x00000015, 0x000000e7, 0x000006eb, 0x00002982,
    0x0000cf8a, 0x00038356, 0x000d8cde, 0x002f6d09, 0x0098d11d, 0x01ca7357,
    0x050bff3b, 0x0d755348, 0x2229d368, 0x52f7dcd8, 0xc197adf8, 0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000016, 0x000000fd, 0x000007e8, 0x0000316a,
    0x000100f4, 0x0004844a, 0x00121128, 0x00417e31, 0x00da4f4e, 0x02a4c2a5,
    0x07b0c1e0, 0x15261528, 0x374fe890, 0x8a47c568, 0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000017, 0x00000114, 0x000008fc, 0x00003a66,
    0x00013b5a, 0x0005bfa4, 0x0017d0cc, 0x00594efd, 0x01339e4b, 0x03d860f0,
    0x0b8922d0, 0x20af37f8, 0x57ff2088, 0xe246e5f0, 0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000018, 0x0000012c, 0x00000a28, 0x0000448e,
    0x00017fe8, 0x00073f8c, 0x001f1058, 0x00785f55, 0x01abfda0, 0x05845e90,
    0x110d8160, 0x31bcb958, 0x89bbd9e0, 0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000019, 0x00000145, 0x00000b6d, 0x00004ffb,
    0x0001cfe3, 0x00090f6f, 0x00281fc7, 0x00a07f1c, 0x024c7cbc, 0x07d0db4c,
    0x18de5cac, 0x4a9b1604, 0xd456efe4, 0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000001a, 0x0000015f, 0x00000ccc, 0x00005cc7,
    0x00022caa, 0x000b3c19, 0x00335be0, 0x00d3dafc, 0x032057b8, 0x0af13304,
    0x23cf8fb0, 0x6e6aa5b4, 0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000001b, 0x0000017a, 0x00000e46, 0x00006b0d,
    0x000297b7, 0x000dd3d0, 0x00412fb0, 0x01150aac, 0x04356264, 0x0f269568,
    0x32f62518, 0xa160cacc, 0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000001c, 0x00000196, 0x00000fdc, 0x00007ae9,
    0x000312a0, 0x0010e670, 0x00521620, 0x016720cc, 0x059c8330, 0x14c31898,
    0x47b93db0, 0xe91a087c, 0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000001d, 0x000001b3, 0x0000118f, 0x00008c78,
    0x00039f18, 0x00148588, 0x00669ba8, 0x01cdbc74, 0x076a3fa4, 0x1c2d583c,
    0x63e695ec, 0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000001e, 0x000001d1, 0x00001360, 0x00009fd8,
    0x00043ef0, 0x0018c478, 0x007f6020, 0x024d1c94, 0x09b75c38, 0x25e4b474,
    0x89cb4a60, 0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000001f, 0x000001f0, 0x00001550, 0x0000b528,
    0x0004f418, 0x001db890, 0x009d18b0, 0x02ea3544, 0x0ca1917c, 0x328645f0,
    0xbc519050, 0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000020, 0x00000210, 0x00001760, 0x0000cc88,
    0x0005c0a0, 0x00237930, 0x00c091e0, 0x03aac724, 0x104c58a0, 0x42d29e90,
    0xff242ee0, 0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000021, 0x00000231, 0x00001991, 0x0000e619,
    0x0006a6b9, 0x002a1fe9, 0x00eab1c9, 0x049578ed, 0x14e1d18d, 0x57b4701d,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000022, 0x00000253, 0x00001be4, 0x000101fd,
    0x0007a8b6, 0x0031c89f, 0x011c7a68, 0x05b1f355, 0x1a93c4e2, 0x724834ff,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000023, 0x00000276, 0x00001e5a, 0x00012057,
    0x0008c90d, 0x003a91ac, 0x01570c14, 0x0708ff69, 0x219cc44b, 0x93e4f94a,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000024, 0x0000029a, 0x000020f4, 0x0001414b,
    0x000a0a58, 0x00449c04, 0x019ba818, 0x08a4a781, 0x2a416bcc, 0xbe266516,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000025, 0x000002bf, 0x000023b3, 0x000164fe,
    0x000b6f56, 0x00500b5a, 0x01ebb372, 0x0a905af3, 0x34d1c6bf, 0xf2f82bd5,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000026, 0x000002e5, 0x00002698, 0x00018b96,
    0x000cfaec, 0x005d0646, 0x0248b9b8, 0x0cd914ab, 0x41aadb6a, 0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000027, 0x0000030c, 0x000029a4, 0x0001b53a,
    0x000eb026, 0x006bb66c, 0x02b47024, 0x0f8d84cf, 0x51386039, 0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000028, 0x00000334, 0x00002cd8, 0x0001e212,
    0x00109238, 0x007c48a4, 0x0330b8c8, 0x12be3d97, 0x63f69dd0, 0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000029, 0x0000035d, 0x00003035, 0x00021247,
    0x0012a47f, 0x008eed23, 0x03bfa5eb, 0x167de382, 0x7a748152, 0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000002a, 0x00000387, 0x000033bc, 0x00024603,
    0x0014ea82, 0x00a3d7a5, 0x04637d90, 0x1ae16112, 0x9555e264, 0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000002b, 0x000003b2, 0x0000376e, 0x00027d71,
    0x001767f3, 0x00bb3f98, 0x051ebd28, 0x20001e3a, 0xb556009e, 0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000002c, 0x000003de, 0x00003b4c, 0x0002b8bd,
    0x001a20b0, 0x00d56048, 0x05f41d70, 0x25f43baa, 0xdb4a3c48, 0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000002d, 0x0000040b, 0x00003f57, 0x0002f814,
    0x001d18c4, 0x00f2790c, 0x06e6967c, 0x2cdad226, 0,          0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000002e, 0x00000439, 0x00004390, 0x00033ba4,
    0x00205468, 0x0112cd74, 0x07f963f0, 0x34d43616, 0,          0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x0000002f, 0x00000468, 0x000047f8, 0x0003839c,
    0x0023d804, 0x0136a578, 0x09300968, 0x3e043f7e, 0,          0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000030, 0x00000498, 0x00004c90, 0x0003d02c,
    0x0027a830, 0x015e4da8, 0x0a8e5710, 0x4892968e, 0,          0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000031, 0x000004c9, 0x00005159, 0x00042185,
    0x002bc9b5, 0x018a175d, 0x0c186e6d, 0x54ab04fb, 0,          0,
    0,          0,          0,          0,          0,          0,  // NOLINT()
    0x00000000, 0x00000001, 0x00000032, 0x000004fb, 0x00005654, 0x000477d9,
    0x0030418e, 0x01ba58eb, 0x0dd2c758, 0x627dcc53, 0,          0,
    0,          0,          0,          0,          0,          0  // NOLINT()
};

}  // namespace OpMultiEvalCudaDetail
}  // namespace datadriven
}  // namespace sgpp
///@endcond // NOLINT()

#endif
